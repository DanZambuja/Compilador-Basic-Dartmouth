Program= BStatement { BStatement } int “END” .
BStatement= int ( Assign | Read | Data | Print | Goto | If | For | Next | Dim | Def | Gosub | Return | Remark ) .
Assign= “LET” Var “=” Exp .
Var= letter digit | letter [ “(” Exp { “,” Exp } “)” ] .
Exp= { “+” | “-” } Eb { ( “+” | “-” | “*” | “/” | “” ) Eb } .
Eb= “(” Exp “)” | Num | Var | ( “FN” letter | Predef ) “(” Exp “)” .
Predef= “SIN” | “COS” | “TAN” | “ATN” | “EXP” | “ABS” | “LOG” | “SQR” | “INT” | “RND” .
Read= “READ” Var { “,” Var } .
Data= “DATA” Snum { “,” Snum } .
Print= “PRINT” [ Pitem { “,” Pitem } [ “,” ] ].
Pitem= Exp | ““” Character { Character } “”” [ Exp ] .
Goto= ( “GOTO” | “GO” “TO” ) int .
If= “IF” Exp ( “>=” | “>” | “<>” | “<” | “<=” | “=” ) Exp “THEN” int .
For= “FOR” letter [ digit ] “=” Exp “TO” Exp [ “STEP” Exp ] .
Next= “NEXT” letter [ digit ] .
Dim= “DIM” letter “(” int { “,” int } “)” { “,” letter “(” int { “,” int } “)” } . 
Def= “DEF FN” letter “(” letter [ digit ] “)” “=” Exp .
Gosub= “GOSUB” int .
Return= “RETURN” .
Remark= “REM” { Character } .
Int= digit { digit } .
Num= ( Int [ “.” { digit } ] | “.” Int ) [ “E” [ “+” | “-” ] Int ] .
Snum= [ “+” | “-” ] Num .
Character= letter | digit | special .
letter = “A” | “B” | “C” | “D” | “E” | “F” | “G” | “H” | “I” | “J” | “K” | “L” | “M” | “N” | “O” | “P” | “Q” | “R” | “S” | “T” | “U” | “V” | “W” | “X” | “Y” | “Z” | “a” | “b” | “c” | “d” | “e” | “f” | “g” | “h” | “i” | “j” | “k” | “l” | “m” | “n” | “o” | “p” | “q” | “r” | “s” | “t” | “u” | “v” | “w” | “x” | “y” | “z”
digit = “0” | “1” | “2” | “3” | “4” | “5” | “6” | “7” | “8” | “9”
special = “!” | “@” | “#” | “%” | “ ̈” | “&” | “*” | “(” | “)” | “_” | “+” | “-” | “=” | “§” | “{” | “[” | “ª” | “}” | “]” | “º” | “?” | “/” | “°” | “`” | “ ́” | “^” | “~” | “<” | “,” | “>” | “.” | “:” | “;” | “|” | “\” | ““” | “””